service: serverless-guru-api

# Serverless Dashboard Configuration
org: hoanglyassessment
app: serverless-guru-api

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    ITEMS_TABLE: ${self:service}-items-${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEMS_TABLE}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEMS_TABLE}/index/*"

plugins:
  - serverless-offline

functions:
  createItem:
    handler: src/handlers/items.createItem
    events:
      - http:
          path: api/items
          method: post
          cors: true

  getItems:
    handler: src/handlers/items.getItems
    events:
      - http:
          path: api/items
          method: get
          cors: true

  getItem:
    handler: src/handlers/items.getItem
    events:
      - http:
          path: api/items/{id}
          method: get
          cors: true

  updateItem:
    handler: src/handlers/items.updateItem
    events:
      - http:
          path: api/items/{id}
          method: put
          cors: true

  deleteItem:
    handler: src/handlers/items.deleteItem
    events:
      - http:
          path: api/items/{id}
          method: delete
          cors: true

resources:
  Resources:
    ItemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ITEMS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: ${self:service}-${self:provider.stage}-ApiGatewayRestApiId

    ItemsTableName:
      Value:
        Ref: ItemsTable
      Export:
        Name: ${self:service}-${self:provider.stage}-ItemsTableName

    ItemsTableArn:
      Value:
        Fn::GetAtt:
          - ItemsTable
          - Arn
      Export:
        Name: ${self:service}-${self:provider.stage}-ItemsTableArn

