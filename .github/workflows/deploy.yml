name: Deploy Serverless Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm test || echo "No tests configured yet"

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == refs/heads/main
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to development
        run: |
          cd backend
          serverless deploy --stage dev --verbose

      - name: Get API Gateway URL
        id: get-api-url
        run: |
          cd backend
          API_URL=$(serverless info --stage dev | grep "endpoint:" | cut -d " " -f 2)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == refs/heads/main && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to production
        run: |
          cd backend
          serverless deploy --stage prod --verbose

      - name: Get API Gateway URL
        id: get-api-url
        run: |
          cd backend
          API_URL=$(serverless info --stage prod | grep "endpoint:" | cut -d " " -f 2)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Create deployment summary
        run: |
          echo "## Production Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "**API URL:** ${{ steps.get-api-url.outputs.api_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Stage:** production" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
